buildscript {
    ext.kotlin_version = '1.3.72'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins{
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'maven'
}

group 'net.kodehawa'
version = "3.0.3"

sourceCompatibility = 1.8



repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.10.3"
    implementation "com.squareup.okhttp3:okhttp:4.5.0"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation "org.slf4j:slf4j-log4j12:1.7.30"
    testImplementation "junit:junit:4.13"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

task sourcesForRelease(type: Copy) {
    from 'src/main/java'
    into 'build/filteredSrc'
}

import org.apache.tools.ant.filters.ReplaceTokens

//Task for the versioning system
task prepareSource(type: Copy) {
    from 'src/main/java'
    into 'build/prepared-src'
    filter(ReplaceTokens, tokens: [
            version: version
    ])
    dependsOn clean
}
prepareSource.dependsOn clean

wrapper {
    gradleVersion = '4.1'

}
compileJava {
    source = sourcesForRelease.destinationDir
    classpath = sourceSets.main.compileClasspath

    options.encoding = 'UTF-8'

    dependsOn sourcesForRelease
}

jar {
    manifest {
        attributes 'Implementation-Version': getArchiveVersion()
    }
}


build {
    dependsOn clean
    dependsOn jar

    dependsOn test

    jar.mustRunAfter clean
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}